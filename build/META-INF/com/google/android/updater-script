# -------------------------
# TGP AROMA INSTALLER v6.70
# updater-script portion
#
# Created by djb77 from XDA
#
# DO NOT USE ANY PORTION OF
# THIS CODE WITHOUT MY
# PERMISSION!! Thank you :)
# -------------------------

# SETUP
# -----
set_progress(0.0);
ui_print("@Setting up the Installer");
ui_print("Mounting Partitions");
unmount("/system");
unmount("/preload");
unmount("/cache");
unmount("/data");
mount("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/SYSTEM", "/system");
mount("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/HIDDEN", "/preload");
mount("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/USERDATA", "/data");
mount("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/CACHE", "/cache");
mount("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/EFS", "/efs");
ui_print(" Copying Installer Files");
package_extract_dir("tgp/bin", "/tmp/bin");
package_extract_dir("tgp/installers", "/tmp/installers");
set_perm_recursive(0, 0, 0777, 0777, "/tmp/bin");
set_perm_recursive(0, 0, 0777, 0777, "/tmp/installers");
set_progress(0.1);

# BACKUP EFS
# ----------
if file_getprop("/tmp/aroma/efs.prop","install") == "1"
then
  ui_print(" Backing up EFS");
  run_program("/tmp/bin/efs");
endif;

# INSTALL ROM
# -----------
if file_getprop("/tmp/aroma/rominstall.prop","install") == "1"
then
  ui_print(" ");
  ui_print("@Installing ROM");
  if file_getprop("/tmp/aroma/wipe.prop","install") == "0" then
    ui_print(" Formatting Device");
  endif;
  if file_getprop("/tmp/aroma/wipe.prop","install") == "1" then
    ui_print(" Formatting Device (Full Wipe)");
  endif;
  unmount("/system");
  unmount("/preload");      
  format("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/SYSTEM", "0", "/system");
  format("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/HIDDEN", "0", "/preload");
  mount("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/SYSTEM", "/system");
  mount("ext4", "EMMC", "/dev/block/platform/155a0000.ufs/by-name/HIDDEN", "/preload");
  delete_recursive("/cache");
  delete_recursive("/data/dalvik-cache");
  if file_getprop("/tmp/aroma/wipe.prop","install") == "1" then
	 run_program("/tmp/bin/wipe");
	 delete_recursive("/data/app");
	endif;
  set_progress(0.15);
  ui_print(" Installing Core ROM Files");
  package_extract_dir("tgp/system", "/system");
  package_extract_dir("tgp/data", "/data");
  package_extract_dir("tgp/system_mods/data", "/data");  
  package_extract_dir("tgp/system_mods/system", "/system");
  delete("/system/etc/init.d/placeholder");

  # VARIANTS
  if file_getprop("/tmp/aroma/variant.prop","install") == "1"
  then
    ui_print(" Installing Files for G930F Variant");  
    package_extract_dir("tgp/variants/g930f", "/system");  
  endif;
  if file_getprop("/tmp/aroma/variant.prop","install") == "2"
  then
    ui_print(" Installing Files for G930FD Variant");  
    package_extract_dir("tgp/variants/g930fd", "/system");  
  endif;
  if file_getprop("/tmp/aroma/variant.prop","install") == "3"
  then
    ui_print(" Installing Files for G930W8 Variant");  
    package_extract_dir("tgp/variants/g930w8", "/system");  
  endif;
  if file_getprop("/tmp/aroma/variant.prop","install") == "4"
  then
    ui_print(" Installing Files for G935F Variant");  
    package_extract_dir("tgp/variants/g935f", "/system");  
  endif;
  if file_getprop("/tmp/aroma/variant.prop","install") == "5"
  then
    ui_print(" Installing Files for G935FD Variant");  
    package_extract_dir("tgp/variants/g935fd", "/system");  
  endif;
  if file_getprop("/tmp/aroma/variant.prop","install") == "6"
  then
    ui_print(" Installing Files for G935W8 Variant");  
    package_extract_dir("tgp/variants/g935w8", "/system");  
  endif;
  if file_getprop("/tmp/aroma/g930x.prop","install") == "1"
  then
    package_extract_dir("tgp/system_mods_g930x/system", "/system");
  endif;
  
  ui_print(" Fixing SDCard Permissions");  
  run_program("/tmp/bin/sdcard_fix");

endif;

  # EXTRA FILES FOR MODS
  if file_getprop("/tmp/aroma/magisk.prop","install") == "1"
  then
    package_extract_dir("tgp/installers/magisk-files/data", "/data");
  endif;
  if file_getprop("/tmp/aroma/root-phh.prop","install") == "1"
  then
    package_extract_dir("tgp/installers/magisk-phh-files/data", "/data");
  endif;
  if file_getprop("/tmp/aroma/xposed.prop","install") == "1"
  then
    package_extract_dir("tgp/installers/xposed-files/data", "/data");
  endif;
  
# CSC
# ---
if file_getprop("/tmp/aroma/csc.prop","install") == "101"
then
	ui_print(" Installing ATO CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/ATO/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "102"
then
	ui_print(" Installing ATT CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/ATT/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "103"
then
	ui_print(" Installing AUT CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/AUT/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "104"
then
	ui_print(" Installing BOG CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/BOG/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "105"
then
	ui_print(" Installing BRI CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/BRI/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "106"
then
	ui_print(" Installing BTU CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/BTU/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "107"
then
	ui_print(" Installing COS CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/COS/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "108"
then
	ui_print(" Installing CTI CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/CTI/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "109"
then
	ui_print(" Installing DBT CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/DBT/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "110"
then
	ui_print(" Installing DDE CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/DDE/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "111"
then
	ui_print(" Installing ETL CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/ETL/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "112"
then
	ui_print(" Installing EUR CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/EUR/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "113"
then
	ui_print(" Installing EVR CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/EVR/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "114"
then
	ui_print(" Installing FTM CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/FTM/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "115"
then
	ui_print(" Installing GBL CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/GBL/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "116"
then
	ui_print(" Installing HTS CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/HTS/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "117"
then
	ui_print(" Installing ILO CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/ILO/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "118"
then
	ui_print(" Installing INS CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/INS/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "119"
then
	ui_print(" Installing ITV CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/ITV/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "120"
then
	ui_print(" Installing IUS CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/IUS/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "121"
then
	ui_print(" Installing KTC CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/KTC/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "122"
then
	ui_print(" Installing LUX CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/LUX/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "123"
then
	ui_print(" Installing MEO CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/MEO/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "124"
then
	ui_print(" Installing MOT CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/MOT/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "125"
then
	ui_print(" Installing NEE CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/NEE/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "126"
then
	ui_print(" Installing NZC CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/NZC/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "127"
then
	ui_print(" Installing OPS CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/OPS/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "128"
then
	ui_print(" Installing ORO CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/ORO/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "129"
then
	ui_print(" Installing PHE CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/PHE/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "130"
then
	ui_print(" Installing PHN CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/PHN/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "131"
then
	ui_print(" Installing SER CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/SER/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "132"
then
	ui_print(" Installing SFR CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/SFR/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "133"
then
	ui_print(" Installing SKC CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/SKC/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "134"
then
	ui_print(" Installing TCE CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/TCE/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "135"
then
	ui_print(" Installing TEL CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/TEL/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "136"
then
	ui_print(" Installing TEN CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/TEN/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "137"
then
	ui_print(" Installing TGY CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/TGY/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "138"
then
	ui_print(" Installing THL CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/THL/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "139"
then
	ui_print(" Installing TMB CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/TMB/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "140"
then
	ui_print(" Installing TMS CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/TMS/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "141"
then
	ui_print(" Installing TMZ CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/TMZ/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "142"
then
	ui_print(" Installing TPA CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/TPA/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "143"
then
	ui_print(" Installing TSI CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/TSI/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "144"
then
	ui_print(" Installing TUR CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/TUR/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "145"
then
	ui_print(" Installing VAU CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/VAU/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "146"
then
	ui_print(" Installing VD2 CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/VD2/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "147"
then
	ui_print(" Installing VDS CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/VDS/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "148"
then
	ui_print(" Installing VIA CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/VIA/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "149"
then
	ui_print(" Installing VVT CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/VVT/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "150"
then
	ui_print(" Installing VZW CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/VZW/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "151"
then
	ui_print(" Installing XAC CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/XAC/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "152"
then
	ui_print(" Installing XAS CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/XAS/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "153"
then
	ui_print(" Installing XEF CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/XEF/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "154"
then
	ui_print(" Installing XEO CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/XEO/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "155"
then
	ui_print(" Installing XID CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/XID/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "156"
then
	ui_print(" Installing XSA CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/XSA/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "157"
then
	ui_print(" Installing XSG CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/XSG/system", "/system");
endif;
if file_getprop("/tmp/aroma/csc.prop","install") == "158"
then
	ui_print(" Installing ZTO CSC");
  run_program("/tmp/bin/csc");
  package_extract_dir("tgp/csc/_/system", "/system");
	package_extract_dir("tgp/csc/ZTO/system", "/system");
endif;

# SYMLINKS / PERMISSIONS
# ----------------------
set_progress(0.3);
ui_print(" Setting Symlinks");
symlink("app_process64", "/system/bin/app_process");
symlink("dalvikvm64", "/system/bin/dalvikvm");
symlink("grep", "/system/bin/egrep");
symlink("grep", "/system/bin/fgrep");
symlink("libGLESv2.so", "/system/lib64/libGLESv3.so");
symlink("libGLESv2.so", "/system/lib/libGLESv3.so");
symlink("libOpenCL.so.1.1", "/system/vendor/lib64/libOpenCL.so.1");
symlink("libOpenCL.so.1.1", "/system/vendor/lib/libOpenCL.so.1");
symlink("libOpenCL.so.1", "/system/vendor/lib64/libOpenCL.so");
symlink("libOpenCL.so.1", "/system/vendor/lib/libOpenCL.so");
symlink("Roboto-Bold.ttf", "/system/fonts/DroidSans-Bold.ttf");
symlink("Roboto-Medium.ttf", "/system/fonts/SECRobotoLight-Bold.ttf");
symlink("Roboto-Regular.ttf", "/system/fonts/DroidSans.ttf");
symlink("Roboto-Regular.ttf", "/system/fonts/SECRobotoLight-Regular.ttf");
symlink("/system/lib64/libaed.so", "/system/app/AdvSoundDetector2015/lib/arm64/libaed.so");
symlink("/system/lib64/libdefcontainer_jni.so", "/system/priv-app/DefaultContainerService/lib/arm64/libdefcontainer_jni.so");
symlink("/system/lib64/libfdb.so", "/system/app/AdvSoundDetector2015/lib/arm64/libfdb.so");
symlink("/system/lib64/libjni_pacprocessor.so", "/system/app/PacProcessor/lib/arm64/libjni_pacprocessor.so");
symlink("/system/lib64/libmorpho_panorama_wa_for_viewer.so", "/system/app/Panorama360Viewer_Zero/lib/arm64/libmorpho_panorama_wa_for_viewer.so");
symlink("/system/lib64/libmorpho_sensor_fusion_for_viewer.so", "/system/app/Panorama360Viewer_Zero/lib/arm64/libmorpho_sensor_fusion_for_viewer.so");
symlink("/system/lib64/libnfc_nci_jni.so", "/system/app/NfcNci/lib/arm64/libnfc_nci_jni.so");
symlink("/system/lib64/libprintspooler_jni6.so", "/system/app/SPrintSpooler6/lib/arm64/libprintspooler_jni6.so");
symlink("/system/lib64/libSamsungBCPP.so", "/system/app/AdvSoundDetector2015/lib/arm64/libSamsungBCPP.so");
symlink("/system/lib64/libTui.so", "/system/app/TuiService/lib/arm64/libTui.so");
symlink("/system/lib/libapa_jni.so", "/system/app/SapaMonitor/lib/arm/libapa_jni.so");
symlink("/system/lib/libasf_fileshareserver.so", "/system/app/AllshareFileShareServer/lib/arm/libasf_fileshareserver.so");
symlink("/system/lib/libasf_fileshare.so", "/system/app/AllshareFileShare/lib/arm/libasf_fileshare.so");
symlink("/system/lib/libasf_mediashare.so", "/system/app/AllshareMediaShare/lib/arm/libasf_mediashare.so");
symlink("/system/lib/libatomcore.so", "/system/priv-app/SelectiveFocusViewer/lib/arm/libatomcore.so");
symlink("/system/lib/libatomjpeg.so", "/system/priv-app/SelectiveFocusViewer/lib/arm/libatomjpeg.so");
symlink("/system/lib/libbluetooth_jni.so", "/system/app/Bluetooth/lib/arm/libbluetooth_jni.so");
symlink("/system/lib/libcommonpawrapper.so", "/system/app/RootPA/lib/arm/libcommonpawrapper.so");
symlink("/system/lib/libCreateSceneMap.so", "/system/priv-app/VirtualTourViewer_WQHD_Hero/lib/arm/libCreateSceneMap.so");
symlink("/system/lib/libqjpeg_secvision.so", "/system/priv-app/VirtualTourViewer_WQHD_Hero/lib/arm/libqjpeg_secvision.so");
symlink("/system/lib/libQualityWrapper_Wallpaper.so", "/system/priv-app/WallpaperCompression/lib/arm/libQualityWrapper_Wallpaper.so");
symlink("/system/lib/libsecipx.so", "/system/priv-app/SelectiveFocusViewer/lib/arm/libsecipx.so");
symlink("/system/lib/libSRIB_FocusShot.so", "/system/priv-app/SelectiveFocusViewer/lib/arm/libSRIB_FocusShot.so");
symlink("/system/lib/libsvoicedll.so", "/system/priv-app/SVoice_1.0/lib/arm/libsvoicedll.so");
symlink("/system/lib/libsvoicedll.so", "/system/priv-app/SVoicePLM_1.0/lib/arm/libsvoicedll.so");
symlink("toolbox", "/system/bin/dd");
symlink("toolbox", "/system/bin/df");
symlink("toolbox", "/system/bin/du");
symlink("toolbox", "/system/bin/getevent");
symlink("toolbox", "/system/bin/iftop");
symlink("toolbox", "/system/bin/ioctl");
symlink("toolbox", "/system/bin/ionice");
symlink("toolbox", "/system/bin/log");
symlink("toolbox", "/system/bin/ls");
symlink("toolbox", "/system/bin/lsof");
symlink("toolbox", "/system/bin/mount");
symlink("toolbox", "/system/bin/nandread");
symlink("toolbox", "/system/bin/newfs_msdos");
symlink("toolbox", "/system/bin/prlimit");
symlink("toolbox", "/system/bin/ps");
symlink("toolbox", "/system/bin/renice");
symlink("toolbox", "/system/bin/sendevent");
symlink("toolbox", "/system/bin/start");
symlink("toolbox", "/system/bin/stop");
symlink("toolbox", "/system/bin/top");
symlink("toolbox", "/system/bin/uptime");
symlink("toolbox", "/system/bin/watchprops");
symlink("toybox", "/system/bin/acpi");
symlink("toybox", "/system/bin/basename");
symlink("toybox", "/system/bin/blockdev");
symlink("toybox", "/system/bin/bzcat");
symlink("toybox", "/system/bin/cal");
symlink("toybox", "/system/bin/cat");
symlink("toybox", "/system/bin/chcon");
symlink("toybox", "/system/bin/chgrp");
symlink("toybox", "/system/bin/chmod");
symlink("toybox", "/system/bin/chown");
symlink("toybox", "/system/bin/chroot");
symlink("toybox", "/system/bin/cksum");
symlink("toybox", "/system/bin/clear");
symlink("toybox", "/system/bin/cmp");
symlink("toybox", "/system/bin/comm");
symlink("toybox", "/system/bin/cp");
symlink("toybox", "/system/bin/cpio");
symlink("toybox", "/system/bin/cut");
symlink("toybox", "/system/bin/date");
symlink("toybox", "/system/bin/dirname");
symlink("toybox", "/system/bin/dmesg");
symlink("toybox", "/system/bin/dos2unix");
symlink("toybox", "/system/bin/echo");
symlink("toybox", "/system/bin/env");
symlink("toybox", "/system/bin/expand");
symlink("toybox", "/system/bin/expr");
symlink("toybox", "/system/bin/fallocate");
symlink("toybox", "/system/bin/false");
symlink("toybox", "/system/bin/find");
symlink("toybox", "/system/bin/free");
symlink("toybox", "/system/bin/getenforce");
symlink("toybox", "/system/bin/getprop");
symlink("toybox", "/system/bin/groups");
symlink("toybox", "/system/bin/head");
symlink("toybox", "/system/bin/hostname");
symlink("toybox", "/system/bin/hwclock");
symlink("toybox", "/system/bin/id");
symlink("toybox", "/system/bin/ifconfig");
symlink("toybox", "/system/bin/inotifyd");
symlink("toybox", "/system/bin/insmod");
symlink("toybox", "/system/bin/kill");
symlink("toybox", "/system/bin/ln");
symlink("toybox", "/system/bin/load_policy");
symlink("toybox", "/system/bin/logname");
symlink("toybox", "/system/bin/losetup");
symlink("toybox", "/system/bin/lsmod");
symlink("toybox", "/system/bin/lsusb");
symlink("toybox", "/system/bin/md5sum");
symlink("toybox", "/system/bin/mkdir");
symlink("toybox", "/system/bin/mknod");
symlink("toybox", "/system/bin/mkswap");
symlink("toybox", "/system/bin/mktemp");
symlink("toybox", "/system/bin/modinfo");
symlink("toybox", "/system/bin/more");
symlink("toybox", "/system/bin/mountpoint");
symlink("toybox", "/system/bin/mv");
symlink("toybox", "/system/bin/netstat");
symlink("toybox", "/system/bin/nice");
symlink("toybox", "/system/bin/nl");
symlink("toybox", "/system/bin/nohup");
symlink("toybox", "/system/bin/od");
symlink("toybox", "/system/bin/paste");
symlink("toybox", "/system/bin/patch");
symlink("toybox", "/system/bin/pgrep");
symlink("toybox", "/system/bin/pidof");
symlink("toybox", "/system/bin/pkill");
symlink("toybox", "/system/bin/pmap");
symlink("toybox", "/system/bin/printenv");
symlink("toybox", "/system/bin/printf");
symlink("toybox", "/system/bin/pwd");
symlink("toybox", "/system/bin/readlink");
symlink("toybox", "/system/bin/realpath");
symlink("toybox", "/system/bin/restorecon");
symlink("toybox", "/system/bin/rm");
symlink("toybox", "/system/bin/rmdir");
symlink("toybox", "/system/bin/rmmod");
symlink("toybox", "/system/bin/route");
symlink("toybox", "/system/bin/runcon");
symlink("toybox", "/system/bin/sed");
symlink("toybox", "/system/bin/seq");
symlink("toybox", "/system/bin/setenforce");
symlink("toybox", "/system/bin/setprop");
symlink("toybox", "/system/bin/setsid");
symlink("toybox", "/system/bin/sha1sum");
symlink("toybox", "/system/bin/sleep");
symlink("toybox", "/system/bin/sort");
symlink("toybox", "/system/bin/split");
symlink("toybox", "/system/bin/stat");
symlink("toybox", "/system/bin/strings");
symlink("toybox", "/system/bin/swapoff");
symlink("toybox", "/system/bin/swapon");
symlink("toybox", "/system/bin/sync");
symlink("toybox", "/system/bin/sysctl");
symlink("toybox", "/system/bin/tac");
symlink("toybox", "/system/bin/tail");
symlink("toybox", "/system/bin/tar");
symlink("toybox", "/system/bin/taskset");
symlink("toybox", "/system/bin/tee");
symlink("toybox", "/system/bin/time");
symlink("toybox", "/system/bin/timeout");
symlink("toybox", "/system/bin/touch");
symlink("toybox", "/system/bin/tr");
symlink("toybox", "/system/bin/true");
symlink("toybox", "/system/bin/truncate");
symlink("toybox", "/system/bin/umount");
symlink("toybox", "/system/bin/uname");
symlink("toybox", "/system/bin/uniq");
symlink("toybox", "/system/bin/unix2dos");
symlink("toybox", "/system/bin/usleep");
symlink("toybox", "/system/bin/vmstat");
symlink("toybox", "/system/bin/wc");
symlink("toybox", "/system/bin/which");
symlink("toybox", "/system/bin/whoami");
symlink("toybox", "/system/bin/xargs");
symlink("toybox", "/system/bin/yes");
symlink("/vendor/lib64/egl/libGLES_mali.so", "/system/vendor/lib64/hw/vulkan.exynos5.so");
symlink("/vendor/lib64/egl/libGLES_mali.so", "/system/vendor/lib64/libOpenCL.so.1.1");
symlink("/vendor/lib/egl/libGLES_mali.so", "/system/vendor/lib/hw/vulkan.exynos5.so");
symlink("/vendor/lib/egl/libGLES_mali.so", "/system/vendor/lib/libOpenCL.so.1.1");

ui_print(" Setting Permissions");
set_metadata_recursive("/data/app", "uid", 1000, "gid", 1000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0);
set_metadata("/data/app", "uid", 1000, "gid", 1000, "mode", 0771, "capabilities", 0x0);
set_metadata_recursive("/system", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/bin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/androidshmservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:androidshmservice_exec:s0");
set_metadata("/system/bin/apaservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:apaservice_exec:s0");
set_metadata("/system/bin/app_process32", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
set_metadata("/system/bin/app_process64", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
set_metadata("/system/bin/argosd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:argosd_exec:s0");
set_metadata("/system/bin/at_distributor", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:at_distributor_exec:s0");
set_metadata("/system/bin/auditd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:auditd_exec:s0");
set_metadata("/system/bin/bintvoutservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bintvoutservice_exec:s0");
set_metadata("/system/bin/blkid", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:blkid_exec:s0");
set_metadata("/system/bin/bootanimation", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bootanim_exec:s0");
set_metadata("/system/bin/bootchecker", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bootchecker_exec:s0");
set_metadata("/system/bin/bugreport", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bugreport_exec:s0");
set_metadata("/system/bin/cellgeofenced", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:cellgeofenced_exec:s0");
set_metadata("/system/bin/charon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:charon_exec:s0");
set_metadata("/system/bin/clatd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:clatd_exec:s0");
set_metadata("/system/bin/connfwexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:connfwexe_exec:s0");
set_metadata("/system/bin/cs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:cs_exec:s0");
set_metadata("/system/bin/ddexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ddexe_exec:s0");
set_metadata("/system/bin/debuggerd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:debuggerd_exec:s0");
set_metadata("/system/bin/debuggerd64", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:debuggerd_exec:s0");
set_metadata("/system/bin/dex2oat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dex2oat_exec:s0");
set_metadata("/system/bin/dhcpcd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dhcp_exec:s0");
set_metadata("/system/bin/diagexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:diagexe_exec:s0");
set_metadata("/system/bin/dnsmasq", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dnsmasq_exec:s0");
set_metadata("/system/bin/drmserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:drmserver_exec:s0");
set_metadata("/system/bin/dumpstate", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dumpstate_exec:s0");
set_metadata("/system/bin/dumpsys", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dumpsys_exec:s0");
set_metadata("/system/bin/edmaudit", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:edmaudit_exec:s0");
set_metadata("/system/bin/e2fsck", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/epmlogd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:epmlogd_exec:s0");
set_metadata("/system/bin/fingerprintd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fingerprintd_exec:s0");
set_metadata("/system/bin/fsck.exfat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/fsck.f2fs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/fsck_msdos", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/gatekeeperd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:gatekeeperd_exec:s0");
set_metadata("/system/bin/gpsd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:gpsd_exec:s0");
set_metadata("/system/bin/hostapd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:hostapd_exec:s0");
set_metadata("/system/bin/icd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:icd_exec:s0");
set_metadata("/system/bin/install-recovery.sh", "uid", 0, "gid", 0, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:install_recovery_exec:s0");
set_metadata("/system/bin/installd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:installd_exec:s0");
set_metadata("/system/bin/insthk", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:insthk_exec:s0");
set_metadata("/system/bin/iptables", "uid", 0, "gid", 1000, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/ip6tables", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/IPSecService", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:IPSecService_exec:s0");
set_metadata("/system/bin/jackservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:jackservice_exec:s0");
set_metadata("/system/bin/keystore", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:keystore_exec:s0");
set_metadata("/system/bin/lhd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:lhd_exec:s0");
set_metadata("/system/bin/lmkd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:lmkd_exec:s0");
set_metadata("/system/bin/logcat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:logcat_exec:s0");
set_metadata("/system/bin/logd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:logd_exec:s0");
set_metadata("/system/bin/logwrapper", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/lpm", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:lpm_exec:s0");
set_metadata("/system/bin/macloader", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:macloader_exec:s0");
set_metadata("/system/bin/make_ext4fs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/mcDriverDaemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mobicoredaemon_exec:s0");
set_metadata("/system/bin/mdnsd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mdnsd_exec:s0");
set_metadata("/system/bin/mediaserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mediaserver_exec:s0");
set_metadata("/system/bin/mfgloader", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mfgloader_exec:s0");
set_metadata("/system/bin/mkfs.exfat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/mtpd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mtp_exec:s0");
set_metadata("/system/bin/ndc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/netd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:netd_exec:s0");
set_metadata("/system/bin/npsmobex", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mobexdaemon_exec:s0");
set_metadata("/system/bin/olsrd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:olsrd_exec:s0");
set_metadata("/system/bin/otp_server", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:otp_server_exec:s0");
set_metadata("/system/bin/patchoat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dex2oat_exec:s0");
set_metadata("/system/bin/ping", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/pppd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ppp_exec:s0");
set_metadata("/system/bin/prepare_param.sh", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:prepare_param_sh_file:s0");
set_metadata("/system/bin/racoon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:racoon_exec:s0");
set_metadata("/system/bin/resetreason", "uid", 1000, "gid", 1000, "mode", 0710, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/rild", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:rild_exec:s0");
set_metadata("/system/bin/run-as", "uid", 0, "gid", 2000, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:runas_exec:s0");
set_metadata("/system/bin/samsungpowersoundplay", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:samsungpowersoundplay_exec:s0");
set_metadata("/system/bin/scs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:scs_exec:s0");
set_metadata("/system/bin/sdcard", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdcardd_exec:s0");
set_metadata("/system/bin/sdp_cryptod", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdp_cryptod_exec:s0");
set_metadata("/system/bin/secure_storage_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:secure_storage_exec:s0");
set_metadata("/system/bin/sem_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sem_exec:s0");
set_metadata("/system/bin/sensorhubservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sensorhubservice_exec:s0");
set_metadata("/system/bin/servicemanager", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:servicemanager_exec:s0");
set_metadata("/system/bin/sgdisk", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sgdisk_exec:s0");
set_metadata("/system/bin/sh", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:shell_exec:s0");
set_metadata("/system/bin/smdexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:smdexe_exec:s0");
set_metadata("/system/bin/ss_conn_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ss_conn_daemon_exec:s0");
set_metadata("/system/bin/ss_kbservice_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ss_kbservice_daemon_exec:s0");
set_metadata("/system/bin/surfaceflinger", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:surfaceflinger_exec:s0");
set_metadata("/system/bin/tc", "uid", 0, "gid", 1000, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/tima_dump_log", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:tima_dump_exec:s0");
set_metadata("/system/bin/tlc_server", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:tlc_server_exec:s0");
set_metadata("/system/bin/toolbox", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:toolbox_exec:s0");
set_metadata("/system/bin/toybox", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:toolbox_exec:s0");
set_metadata("/system/bin/tzdatacheck", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:tzdatacheck_exec:s0");
set_metadata("/system/bin/uncrypt", "uid", 0, "gid", 0, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:uncrypt_exec:s0");
set_metadata("/system/bin/vdc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vdc_exec:s0");
set_metadata("/system/bin/vold", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vold_exec:s0");
set_metadata("/system/bin/vpnclientd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vpnclientd_exec:s0");
set_metadata("/system/bin/wlandutservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:wlandutservice_exec:s0");
set_metadata("/system/bin/wpa_supplicant", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:wpa_exec:s0");
set_metadata("/system/etc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/bluetooth", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/bluetooth/auto_pair_devlist.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/bluetooth/bt_did.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/bluetooth/bt_stack.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/dhcpcd", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:dhcp_system_file:s0");
set_metadata("/system/etc/dhcpcd/dhcpcd-hooks", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/dhcpcd/dhcpcd-run-hooks", "uid", 1014, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/recovery-from-boot.p", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0);
set_metadata("/system/etc/event-log-tags", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:event_log_tags_file:s0");
set_metadata_recursive("/system/etc/firmware", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/init.goldfish.sh", "uid", 0, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/init.sec.boot.sh", "uid", 0, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:sec-sh_exec:s0");
set_metadata("/system/etc/permissions", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/ppp", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0555, "capabilities", 0x0, "selabel", "u:object_r:ppp_system_file:s0");
set_metadata("/system/etc/security", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/security/cacerts", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/security/.drm", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:drm_security_system_file:s0");
set_metadata_recursive("/system/lib", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_library_file:s0");
set_metadata_recursive("/system/vendor", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/etc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/etc/nxp", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/egl", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/lib/hw", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/lib/mediadrm", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/mediadrm/libdrmclearkeyplugin.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/mediadrm/libwvdrmengine.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/media", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/xbin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/dexdump", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/redsocks", "selabel", "u:object_r:redsocks_exec:s0");
set_metadata("/system/bin/resize2fs", "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/rpmbd", "selabel", "u:object_r:rpmbd_exec:s0");
set_metadata("/system/lib/drm", "selabel", "u:object_r:drm_lib_system_file:s0");

set_metadata_recursive("/system/etc/init.d", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/init.d", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/su.d", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/su.d", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");

# SAMSUNG APPS
# ------------
if file_getprop("/tmp/aroma/extra-samsung.prop","install") == "1"
then
  ui_print(" ");
  ui_print("@Installing Extra Samsung Apps");
    if file_getprop("/tmp/aroma/extra-samsung-1.prop","install") == "1"
  then
    ui_print(" Installing Car Mode");
    package_extract_dir("tgp/apps/samsung/CarMode", "/system/app/CarMode");
  endif;
  if file_getprop("/tmp/aroma/extra-samsung-2.prop","install") == "1"
  then
    ui_print(" Installing E-Mail");
    package_extract_dir("tgp/apps/samsung/SecEmail_M", "/system/app/SecEmail_M");
  endif;
  if file_getprop("/tmp/aroma/extra-samsung-3.prop","install") == "1"
  then
    ui_print(" Installing Kies");
    package_extract_dir("tgp/apps/samsung/Kies", "/system/priv-app/Kies");
  endif;
  if file_getprop("/tmp/aroma/extra-samsung-4.prop","install") == "1"
  then
    ui_print(" Installing Samsung Cloud");
    package_extract_dir("tgp/apps/samsung/CloudGateway", "/system/app/CloudGateway");
    package_extract_dir("tgp/apps/samsung/SamsungCloud", "/system/priv-app/SamsungCloud");
  endif;
  if file_getprop("/tmp/aroma/extra-samsung-5.prop","install") == "1"
  then
    ui_print(" Installing Samsung Gear");
    package_extract_dir("tgp/apps/samsung/GearManagerStub", "/system/app/GearManagerStub");
    package_extract_dir("tgp/apps/samsung/GearManager", "/system/priv-app/GearManager");
  endif;
  if file_getprop("/tmp/aroma/extra-samsung-6.prop","install") == "1"
  then
    ui_print(" Installing Samsung Members");
    package_extract_dir("tgp/apps/samsung/GalaxyCare", "/system/priv-app/GalaxyCare");
  endif;
  if file_getprop("/tmp/aroma/extra-samsung-7.prop","install") == "1"
  then
    ui_print(" Installing Samsung Music");
    package_extract_dir("tgp/apps/samsung/Music", "/system/app/Music");
  endif;
  if file_getprop("/tmp/aroma/extra-samsung-8.prop","install") == "1"
  then
    ui_print(" Installing Samsung Video");
    package_extract_dir("tgp/apps/samsung/Video", "/system/app/Video");
  endif;
  if file_getprop("/tmp/aroma/extra-samsung-9.prop","install") == "1"
  then
    ui_print(" Installing S Health");
    package_extract_dir("tgp/apps/samsung/SHealth4", "/system/priv-app/SHealth4");
  endif;
  if file_getprop("/tmp/aroma/extra-samsung-10.prop","install") == "1"
  then
    ui_print(" Installing Smart Switch");
    package_extract_dir("tgp/apps/samsung/SmartSwitch", "/system/priv-app/SmartSwitch");
  endif;  
  
  if file_getprop("/tmp/aroma/extra-samsung-11.prop","install") == "1"
  then
    ui_print(" Installing S Memo");
    package_extract_dir("tgp/apps/samsung/SecMemo3", "/system/app/SecMemo3");
  endif;
  if file_getprop("/tmp/aroma/extra-samsung-12.prop","install") == "1"
  then
    ui_print(" Installing S Voice");
    package_extract_dir("tgp/apps/samsung/SVoice_1.0", "/system/priv-app/SVoice_1.0");
    package_extract_dir("tgp/apps/samsung/SVoiceLang_EnglishPack_GB_1.0", "/system/priv-app/SVoiceLang_EnglishPack_GB_1.0");
    package_extract_dir("tgp/apps/samsung/SVoiceLang_EnglishPack_US_1.0", "/system/priv-app/SVoiceLang_EnglishPack_US_1.0");
    package_extract_dir("tgp/apps/samsung/SVoiceLang_FrenchPack_1.0", "/system/priv-app/SVoiceLang_FrenchPack_1.0");
    package_extract_dir("tgp/apps/samsung/SVoiceLang_GermanPack_DE_1.0", "/system/priv-app/SVoiceLang_GermanPack_DE_1.0");
    package_extract_dir("tgp/apps/samsung/SVoiceLang_ItalianPack_IT_1.0", "/system/priv-app/SVoiceLang_ItalianPack_IT_1.0");
    package_extract_dir("tgp/apps/samsung/SVoiceLang_RussianPack_RU_1.0", "/system/priv-app/SVoiceLang_RussianPack_RU_1.0");
    package_extract_dir("tgp/apps/samsung/SVoiceLang_SpanishPack_ES_1.0", "/system/priv-app/SVoiceLang_SpanishPack_ES_1.0");
    package_extract_dir("tgp/apps/samsung/SVoicePLM_1.0", "/system/priv-app/SVoicePLM_1.0");
    package_extract_dir("tgp/apps/samsung/VoiceWakeUp", "/system/priv-app/VoiceWakeUp");
  endif;
  if file_getprop("/tmp/aroma/extra-samsung-13.prop","install") == "1"
  then
    ui_print(" Installing Text-To-Speech Engine");
    package_extract_dir("tgp/apps/samsung/SamsungTTS", "/system/app/SamsungTTS");
  endif;
endif;

# ------------
# INSTALL MODS
# ------------
set_progress(0.5);
if file_getprop("/tmp/aroma/modinstall.prop","install") == "1"
then
  ui_print(" ");
  ui_print("@Installing Mods / Addons");
endif;
 
# REMOVE SHUTDOWN ANIMATION
# -------------------------
if file_getprop("/tmp/aroma/shutdownanimation.prop","install") == "1"
then
  ui_print(" Removing Shutdown Animation");
  delete("/system/media/shutdown.qmg");
  delete("/system/media/video/shutdown.qmg");
  delete("/system/media/video/shutdown/shutdown.qmg");
endif;

# MODDED CAMERA
# -------------
if file_getprop("/tmp/aroma/camera.prop","install") == "1"
then
  ui_print(" Installing Modded Camera");  
  package_extract_dir("tgp/mods/camera/system", "/system");  
endif;

# THE SOUND MOD
# -------------
if file_getprop("/tmp/aroma/soundmod.prop","install") == "1"
then
  ui_print(" Restoring Stock Sound");  
  package_extract_dir("tgp/mods/soundmod/stock", "/system/etc");  
endif;
if file_getprop("/tmp/aroma/soundmod.prop","install") == "2"
then
  ui_print(" Installing Volume Mod Level 1");  
  package_extract_dir("tgp/mods/soundmod/volume-l1", "/system/etc");  
endif;
if file_getprop("/tmp/aroma/soundmod.prop","install") == "3"
then
  ui_print(" Installing Volume Mod Level 2");  
  package_extract_dir("tgp/mods/soundmod/volume-l2", "/system/etc");  
endif;
if file_getprop("/tmp/aroma/soundmod.prop","install") == "4"
then
  ui_print(" Installing Volume Mod Level 3");  
  package_extract_dir("tgp/mods/soundmod/volume-l3", "/system/etc");  
endif;
if file_getprop("/tmp/aroma/soundmod.prop","install") == "5"
then
  ui_print(" Installing Dual Speaker Mod Level 0");  
  package_extract_dir("tgp/mods/soundmod/dual-l0", "/system/etc");  
endif;
if file_getprop("/tmp/aroma/soundmod.prop","install") == "6"
then
  ui_print(" Installing Dual Speaker Mod Level 1");  
  package_extract_dir("tgp/mods/soundmod/dual-l1", "/system/etc");  
endif;                                                    
if file_getprop("/tmp/aroma/soundmod.prop","install") == "7"
then
  ui_print(" Installing Dual Speaker Mod Level 2");  
  package_extract_dir("tgp/mods/soundmod/dual-l2", "/system/etc");  
endif;
if file_getprop("/tmp/aroma/soundmod.prop","install") == "8"
then
  ui_print(" Installing Dual Speaker Mod Level 3");  
  package_extract_dir("tgp/mods/soundmod/dual-l3", "/system/etc");  
endif;

# 5WAY REBOOT MENU (STANDARD)
# ---------------------------
if file_getprop("/tmp/aroma/5way.prop","install") == "1"
then
  ui_print(" Installing 5way Reboot Menu");
  package_extract_dir("tgp/mods/5wayreboot/system", "/system");
endif;

# AD BLOCKING
# -----------
if file_getprop("/tmp/aroma/adblock.prop","install") == "1"
then
  ui_print(" Applying Ad Blocking");  
  package_extract_dir("tgp/mods/adblock/data", "/data");
endif;

# UNKNOWN SOURCES / SCREEN OVERLAY
# --------------------------------
if file_getprop("/tmp/aroma/unknownsources.prop","install") == "1"
then
  if file_getprop("/tmp/aroma/screenoverlay.prop","install") == "0"
  then
    ui_print(" Permanently enable Unknown Sources");  
    package_extract_dir("tgp/mods/packageinstaller/us/system", "/system");
  endif;  
endif;
if file_getprop("/tmp/aroma/screenoverlay.prop","install") == "1"
then
  if file_getprop("/tmp/aroma/unknownsources.prop","install") == "0"
  then
    ui_print(" Installing Screen Overlay Fix");  
    package_extract_dir("tgp/mods/packageinstaller/so/system", "/system");  
  endif;
  if file_getprop("/tmp/aroma/unknownsources.prop","install") == "1"
  then
    ui_print(" Permanently Enable Unknown Sources");  
    ui_print(" Installing Screen Overlay Fix");  
    package_extract_dir("tgp/mods/packageinstaller/so+us/system", "/system");
  endif;    
endif;

# 3MINIT BATTERY MOD (STANDARD)
# -----------------------------
if file_getprop("/tmp/aroma/3minit.prop","install") == "1"
then
  ui_print(" Installing 3minit Battery Mod");  
  package_extract_dir("tgp/mods/3minit/system", "/system");  
endif;

# IOS EMOJIS
# ----------
if file_getprop("/tmp/aroma/iosemojis.prop","install") == "1"
then
  ui_print(" Installing IOS Emojis");  
  package_extract_dir("tgp/mods/iosemojis/system", "/system");  
endif;

# ------------
# FLASH KERNEL
# ------------
  set_progress(0.75);
    if file_getprop("/tmp/aroma/kernel.prop","install") == "1"
  then
    ui_print(" ");
    ui_print("@Flashing TGPKernel");
    run_program("/tmp/bin/kernel");
    package_extract_dir("tgp/kernels/data-tgp", "/data");    
    package_extract_dir("tgp/kernels/system", "/system");
    set_metadata_recursive("/data/app", "uid", 1000, "gid", 1000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0);
    set_metadata_recursive("/system/app/mcRegistry", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
    if file_getprop("/tmp/aroma/variant.prop","install") == "1"
    then
      package_extract_file("tgp/kernels/g930x/tgp.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
    endif;
    if file_getprop("/tmp/aroma/variant.prop","install") == "2"
    then
      package_extract_file("tgp/kernels/g930x/tgp.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
    endif;
    if file_getprop("/tmp/aroma/variant.prop","install") == "3"
    then
      package_extract_file("tgp/kernels/g930x/tgp.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
    endif;
    if file_getprop("/tmp/aroma/variant.prop","install") == "4"
    then
      package_extract_file("tgp/kernels/g935x/tgp.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
    endif;
    if file_getprop("/tmp/aroma/variant.prop","install") == "5"
    then
      package_extract_file("tgp/kernels/g935x/tgp.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
    endif;
    if file_getprop("/tmp/aroma/variant.prop","install") == "6"
    then
      package_extract_file("tgp/kernels/g935x/tgp.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
    endif;     
  endif;  
  if file_getprop("/tmp/aroma/kernel.prop","install") == "2"
  then
    ui_print(" ");
    ui_print("@Flashing SuperKernel");
    run_program("/tmp/bin/kernel");
    package_extract_dir("tgp/kernels/data-super", "/data");    
    package_extract_dir("tgp/kernels/system", "/system");
    package_extract_dir("tgp/kernels/system-super", "/system");
    set_metadata_recursive("/data/app", "uid", 1000, "gid", 1000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0);
    set_metadata_recursive("/system/app/mcRegistry", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
    if file_getprop("/tmp/aroma/variant.prop","install") == "1"
    then
      package_extract_file("tgp/kernels/g930x/super.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
    endif;
    if file_getprop("/tmp/aroma/variant.prop","install") == "2"
    then
      package_extract_file("tgp/kernels/g930x/super.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
    endif;
    if file_getprop("/tmp/aroma/variant.prop","install") == "3"
    then
      package_extract_file("tgp/kernels/g930x/super.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
    endif;
    if file_getprop("/tmp/aroma/variant.prop","install") == "4"
    then
      package_extract_file("tgp/kernels/g935x/super.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
    endif;
    if file_getprop("/tmp/aroma/variant.prop","install") == "5"
    then
      package_extract_file("tgp/kernels/g935x/super.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
    endif;
    if file_getprop("/tmp/aroma/variant.prop","install") == "6"
    then
      package_extract_file("tgp/kernels/g935x/super.img", "/dev/block/platform/155a0000.ufs/by-name/BOOT");
    endif;     
  endif;  

set_progress(0.85);

# INSTALL SUPERSU / BUSYBOX
# -------------------------
if file_getprop("/tmp/aroma/root-supersu.prop","install") == "1"
then
    ui_print(" ");
    ui_print("@Setting up SuperSU");
    run_program("/sbin/busybox", "unzip", "/tmp/installers/supersu/supersu.zip", "META-INF/com/google/android/*", "-d", "/tmp/installers/supersu");
    run_program("/sbin/busybox", "sh", "/tmp/installers/supersu/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/installers/supersu/supersu.zip");
    ui_print(" ");
    ui_print("@Setting up Busybox");
    run_program("/sbin/busybox", "unzip", "/tmp/installers/busybox/busybox.zip", "META-INF/com/google/android/*", "-d", "/tmp/installers/busybox");
    run_program("/sbin/busybox", "sh", "/tmp/installers/busybox/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/installers/busybox/busybox.zip");
endif;

# INSTALL MAGISK
# --------------
if file_getprop("/tmp/aroma/magisk.prop","install") == "1"
then
  ui_print(" ");
  ui_print("@Setting up Magisk");  
  run_program("/sbin/busybox", "unzip", "/tmp/installers/magisk/magisk.zip", "META-INF/com/google/android/*", "-d", "/tmp/installers/magisk");
  run_program("/sbin/busybox", "sh", "/tmp/installers/magisk/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/installers/magisk/magisk.zip");
endif;

# INSTALL PHH SUPERUSER / BUSYBOX
# -------------------------------
if file_getprop("/tmp/aroma/root-phh.prop","install") == "1"
then
  ui_print(" ");
  ui_print("@Setting up PHH Superuser");
  run_program("/sbin/busybox", "unzip", "/tmp/installers/magisk-phh/magisk-phh.zip", "META-INF/com/google/android/*", "-d", "/tmp/installers/magisk-phh");
  run_program("/sbin/busybox", "sh", "/tmp/installers/magisk-phh/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/installers/magisk-phh/magisk-phh.zip");
  ui_print(" ");
  ui_print("@Setting up Busybox");
  run_program("/sbin/busybox", "unzip", "/tmp/installers/busybox/busybox.zip", "META-INF/com/google/android/*", "-d", "/tmp/installers/busybox");
  run_program("/sbin/busybox", "sh", "/tmp/installers/busybox/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/installers/busybox/busybox.zip");  
endif;

# XPOSED FRAMEWORK + APPS
# -----------------------
if file_getprop("/tmp/aroma/xposed.prop","install") == "1"
then
  ui_print(" ");
  if file_getprop("/tmp/aroma/magisk.prop","install") == "0"
  then
    ui_print("@Setting up Xposed Framework + Apps");
    run_program("/sbin/busybox", "unzip", "/tmp/installers/xposed/xposed.zip", "META-INF/com/google/android/*", "-d", "/tmp/installers/xposed");
    run_program("/sbin/busybox", "sh", "/tmp/installers/xposed/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/installers/xposed/xposed.zip");
  endif;
  if file_getprop("/tmp/aroma/magisk.prop","install") == "1"
  then
    ui_print("@Setting up Xposed Framework + Apps for Magisk");
    run_program("/sbin/busybox", "unzip", "/tmp/installers/magisk-xposed/magisk-xposed.zip", "META-INF/com/google/android/*", "-d", "/tmp/installers/magisk-xposed");
    run_program("/sbin/busybox", "sh", "/tmp/installers/magisk-xposed/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/installers/magisk-xposed/magisk-xposed.zip");
  endif;  
endif;

# ADB
# ---
if file_getprop("/tmp/aroma/adb.prop","install") == "1"
then
  ui_print(" ");
  ui_print("@Setting up ADB");
  run_program("/sbin/busybox", "unzip", "/tmp/installers/adb/adb.zip", "META-INF/com/google/android/*", "-d", "/tmp/installers/adb");
  run_program("/sbin/busybox", "sh", "/tmp/installers/adb/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/installers/adb/adb.zip");
endif;

# 5WAY REBOOT MENU (MAGISK)
# -------------------------
if file_getprop("/tmp/aroma/5way-magisk.prop","install") == "1"
then
  ui_print(" ");
  ui_print("@Installing 5way Reboot Menu (for Magisk)");
  package_extract_dir("tgp/mods/5wayreboot/system", "/tmp/installers/magisk-5wayreboot/import/system");        
  run_program("/tmp/bin/magisk-5wayreboot");
  run_program("/sbin/busybox", "unzip", "/tmp/installers/magisk-5wayreboot/magisk-5wayreboot.zip", "META-INF/com/google/android/*", "-d", "/tmp/installers/magisk-5wayreboot");    
  run_program("/sbin/busybox", "sh", "/tmp/installers/magisk-5wayreboot/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/installers/magisk-5wayreboot/magisk-5wayreboot.zip");
endif;

# 3MINIT BATTERY MOD (MAGISK)
# ---------------------------
if file_getprop("/tmp/aroma/3minit-magisk.prop","install") == "1"
then
  ui_print(" ");
  ui_print("@Installing 3minit Battery Mod (for Magisk)");
  package_extract_dir("tgp/mods/3minit/system", "/tmp/installers/magisk-3minit/import/system");        
  run_program("/tmp/bin/magisk-3minit");
  run_program("/sbin/busybox", "unzip", "/tmp/installers/magisk-3minit/magisk-3minit.zip", "META-INF/com/google/android/*", "-d", "/tmp/installers/magisk-3minit");
  run_program("/sbin/busybox", "sh", "/tmp/installers/magisk-3minit/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/installers/magisk-3minit/magisk-3minit.zip");  
endif;

# THE SOUND MOD (MAGISK)
# ----------------------
if file_getprop("/tmp/aroma/soundmod-magisk.prop","install") == "1"
then
  ui_print(" ");
  ui_print("@Installing The Sound Mod (for Magisk)");
  if file_getprop("/tmp/aroma/soundmod.prop","install") == "12"
  then
    ui_print(" Installing Volume Mod Level 1");  
    package_extract_dir("tgp/mods/soundmod/volume-l1", "/tmp/installers/magisk-soundmod/import/system/etc");  
  endif;
  if file_getprop("/tmp/aroma/soundmod.prop","install") == "13"
  then
    ui_print(" Installing Volume Mod Level 2");  
    package_extract_dir("tgp/mods/soundmod/volume-l2", "/tmp/installers/magisk-soundmod/import/system/etc");  
  endif;
  if file_getprop("/tmp/aroma/soundmod.prop","install") == "14"
  then
    ui_print(" Installing Volume Mod Level 3");  
    package_extract_dir("tgp/mods/soundmod/volume-l3", "/tmp/installers/magisk-soundmod/import/system/etc");  
  endif;
  if file_getprop("/tmp/aroma/soundmod.prop","install") == "15"
  then
    ui_print(" Installing Dual Speaker Mod Level 0");  
    package_extract_dir("tgp/mods/soundmod/dual-l0", "/tmp/installers/magisk-soundmod/import/system/etc");  
  endif;
  if file_getprop("/tmp/aroma/soundmod.prop","install") == "16"
  then
    ui_print(" Installing Dual Speaker Mod Level 1");  
    package_extract_dir("tgp/mods/soundmod/dual-l1", "/tmp/installers/magisk-soundmod/import/system/etc");  
  endif;                                                    
  if file_getprop("/tmp/aroma/soundmod.prop","install") == "17"
  then
    ui_print(" Installing Dual Speaker Mod Level 2");  
    package_extract_dir("tgp/mods/soundmod/dual-l2", "/tmp/installers/magisk-soundmod/import/system/etc");  
  endif;
  if file_getprop("/tmp/aroma/soundmod.prop","install") == "18"
  then
    ui_print(" Installing Dual Speaker Mod Level 3");  
    package_extract_dir("tgp/mods/soundmod/dual-l3", "/tmp/installers/magisk-soundmod/import/system/etc");  
  endif;
  run_program("/tmp/bin/magisk-soundmod");
  run_program("/sbin/busybox", "unzip", "/tmp/installers/magisk-soundmod/magisk-soundmod.zip", "META-INF/com/google/android/*", "-d", "/tmp/installers/magisk-soundmod");    
  run_program("/sbin/busybox", "sh", "/tmp/installers/magisk-soundmod/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/installers/magisk-soundmod/magisk-soundmod.zip");
endif;

# FINISH
# ------
run_program("/sbin/sync");
set_progress(0.9);
ui_print(" ");
ui_print("@Cleaning up and Unmounting");
delete_recursive("/tmp/bin");
delete_recursive("/tmp/installers");
unmount("/system");
unmount("/preload");
unmount("/cache");
unmount("/data");
set_progress(0.95);
ui_print(" ");
ui_print("@Installation Complete");
set_progress(1);
